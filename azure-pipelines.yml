# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

resources:
 pipelines:
   - pipeline: openidconnect
     source: sign-in-canada.passport-openidconnect
     trigger:
      branches:
      - master 
   - pipeline: passportsaml
     source: sign-in-canada.passport-saml
     trigger:
      branches:
      - master

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- script: |
    npm install
  displayName: 'npm install and build'

- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'specific'
    project: '7302639f-e704-47c3-9557-99b4e04a75bc'
    definition: '281'
    buildVersionToDownload: 'latest'
    artifactName: 'passport-saml'
    targetPath: '$(Pipeline.Workspace)/passport-saml'

- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'specific'
    project: '7302639f-e704-47c3-9557-99b4e04a75bc'
    definition: '279'
    buildVersionToDownload: 'latest'
    artifactName: 'passport-openidconnect'
    targetPath: '$(Pipeline.Workspace)/passport-openidconnect'

- script: |
    pwd
    ls -al
    npm install $(Pipeline.Workspace)/saml/s/passport-saml-1.2.0.tgz
    echo '***** saml instal executed ****'
    npm install $(Pipeline.Workspace)/openid/s/passport-openidconnect-0.0.2.tgz
    tar -czvf passport-version_4.0-node_modules.tar.gz node_modules
  displayName: 'Update packages'
  continueOnError: true

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Pipeline.Workspace)/s'
    Contents: |
      **LICENSE
      **package.json
      **package-lock.json
      **README.md
      **server/*
      **passport-version_4.0-node_modules.tar.gz
    TargetFolder: '$(Pipeline.Workspace)/package'

- script: |
    echo 'packaging the files'
    cd $(Pipeline.Workspace)
    pwd
    tar -czvf passport.tgz --exclude='*.tar.gz' package
    mv passport.tgz package
  displayName: 'create tarball'
  continueOnError: true

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    artifact: 'gluu-passport'
    publishLocation: 'pipeline'
  condition: succeededOrFailed()



